{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "environment": {
      "type": "string",
      "defaultValue": "d",
      "metadata": {
        "description": "Development environment"
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Location matches resource group"
      }
    },
    "dataProduct": {
      "type": "string",
      "metadata": {
        "description": "Use Case name"
      }
    },
    "databaseCollation": {
      "type": "string",
      "defaultValue": "SQL_Latin1_General_CP1_CI_AS"
    },
    "keyVaultName": {
      "type": "string",
      "metadata": {
        "description": "Name of the Key Vault to set the secrets"
      }
    },
    "resourceTags": {
      "type": "object"
    },
    "dataProductSize": {
      "type": "string",
      "defaultValue": "s",
      "allowedValues": [
        "s",
        "m",
        "l"
      ],
      "metadata": {
        "description": "Tshirt size for the data product"
      }
    }
  },
  "functions": [],
  "variables": {
    "databaseScale":{
      "s":{
        "databaseRequestedServiceObjectiveName":"Basic",
        "databaseEdition": "Basic",
        "databaseMaxSizeBytes": "2147483648"
      },
      "m":{
        "databaseRequestedServiceObjectiveName": "S1",
        "databaseEdition": "Standard",
        "databaseMaxSizeBytes": "268435456000"
      },
      "l":{
        "databaseRequestedServiceObjectiveName": "S3",
        "databaseEdition": "Standard",
        "databaseMaxSizeBytes": "268435456000" 
      }
    },
    "databaseRequestedServiceObjectiveName": "[variables('databaseScale')[parameters('dataProductSize')].databaseRequestedServiceObjectiveName]",
    "databaseEdition": "[variables('databaseScale')[parameters('dataProductSize')].databaseEdition]",
    "databaseMaxSizeBytes": "[variables('databaseScale')[parameters('dataProductSize')].databaseMaxSizeBytes]",
    "databaseName": "[toLower(concat('de-',parameters('dataProduct'),'-',parameters('environment'),'-db'))]",
    "sqlserverAdminLogin": "sqladmin",
    "sqlserverAdminPassword": "[concat('P', uniqueString(resourceGroup().id,deployment().name, variables('databaseName')), 'x', '!')]",
    "sqlserverName": "[toLower(concat('de-',parameters('dataProduct'),'-',parameters('environment'),'-dbs'))]"
  },
  "resources": [
    {
      "apiVersion": "2021-02-01-preview",
      "name": "[variables('sqlserverName')]",
      "type": "Microsoft.Sql/servers",
      "tags": "[parameters('resourceTags')]",
      "location": "[parameters('location')]",
      "properties": {
        "administratorLogin": "[variables('sqlserverAdminLogin')]",
        "administratorLoginPassword": "[variables('sqlserverAdminPassword')]"
      },
      "resources": [
        {
          "apiVersion": "2021-02-01-preview",
          "name": "[variables('databaseName')]",
          "type": "databases",
          "tags": "[parameters('resourceTags')]",
          "location": "[parameters('location')]",
          "dependsOn": [
            "[concat('Microsoft.Sql/servers/', variables('sqlserverName'))]"
          ],
          "properties": {
            "edition": "[variables('databaseEdition')]",
            "collation": "[parameters('databaseCollation')]",
            "maxSizeBytes": "[variables('databaseMaxSizeBytes')]",
            "requestedServiceObjectiveName": "[variables('databaseRequestedServiceObjectiveName')]"
          }
        },
        {
          "apiVersion": "2021-02-01-preview", //https://docs.microsoft.com/en-us/azure/templates/microsoft.sql/2020-11-01-preview/servers/firewallrules?tabs=json#serverfirewallruleproperties-object
          "name": "AllowAllWindowsAzureIps",
          "type": "firewallrules",
          "tags":"[parameters('resourceTags')]",
          "location": "[parameters('location')]",
          "dependsOn": [
            "[resourceId('Microsoft.Sql/servers', variables('sqlserverName'))]"
          ],
          "properties": {
            "startIpAddress": "0.0.0.0",
            "endIpAddress": "0.0.0.0"
          }
        },
            {
            //https://docs.microsoft.com/en-us/azure/azure-resource-manager/templates/copy-resources#iteration-for-a-child-resource
            "type": "Microsoft.KeyVault/vaults/secrets",
            "apiVersion": "2021-04-01-preview",
            "name": "[concat(parameters('keyVaultName'),'/','azureSqlUser')]",
            "location": "[parameters('location')]",
            "properties": {
                "value": "[reference(variables('sqlserverName')).administratorLogin]"
            },
             "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', variables('sqlserverName'))]"
            ]
        },
        {
            //https://docs.microsoft.com/en-us/azure/azure-resource-manager/templates/copy-resources#iteration-for-a-child-resource
            "type": "Microsoft.KeyVault/vaults/secrets",
            "apiVersion": "2021-04-01-preview",
            "name": "[concat(parameters('keyVaultName'),'/','azureSqlPwd')]",
            "location": "[parameters('location')]",
            "properties": {
                "value": "[variables('sqlserverAdminPassword')]"
            },
             "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', variables('sqlserverName'))]"
            ]
        },
        {
            //https://docs.microsoft.com/en-us/azure/azure-resource-manager/templates/copy-resources#iteration-for-a-child-resource
            "type": "Microsoft.KeyVault/vaults/secrets",
            "apiVersion": "2021-04-01-preview",
            "name": "[concat(parameters('keyVaultName'),'/','azureSqlCs')]",
            "location": "[parameters('location')]",
            "properties": {
                "value": "[concat('Server=tcp:',reference(variables('sqlserverName')).fullyQualifiedDomainName,',1433;Initial Catalog=',variables('databaseName'),';Persist Security Info=False;User ID=',reference(variables('sqlserverName')).administratorLogin,';Password=',variables('sqlserverAdminPassword'),';MultipleActiveResultSets=False;Encrypt=True;TrustServerCertificate=False;Connection Timeout=30;')]"
            },
             "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', variables('sqlserverName'))]"
            ]
        } 
      ]
    }
  ],
  "outputs": {
    "asqlSecretName": {
      "type": "string",
      "value": "azureSqlCs"
    }
  }
}